{"version":3,"file":"index.js","sources":["../src/useWindowWidth.tsx","../src/Gallery.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function useWindowWidth() {\n    const [width, setWidth] = useState<null|number>(null)\n\n    useEffect(() => {\n        const handleResize = () => setWidth(window.innerWidth)\n        window.addEventListener('resize', handleResize)\n        handleResize()\n        return () => window.removeEventListener('resize', handleResize)\n    }, [])\n\n    return width\n}","import React, { useState, useMemo, Dispatch, SetStateAction, ReactElement } from 'react'\nimport Image, { ImageLoader } from 'next/image'\nimport useWindowWidth from './useWindowWidth'\n\n\nexport interface Image {\n    src: string\n    aspect_ratio: number\n    alt?: string\n}\n\nexport interface NamedImage<NameT> extends Image {\n    name: NameT\n}\n\nexport type GalleryProps<NameT, StateT> = {\n    widths: number[]\n    ratios: number[]\n    percentVw?: number\n    margin?: string\n    initState?: StateT\n    imgLoader?: ImageLoader,\n} & ({\n    images: NamedImage<NameT>[]\n    overlay: (name: NameT, state: StateT, setState: Dispatch<SetStateAction<StateT>>) => ReactElement\n}|{\n    images: Image[]\n    overlay?: undefined\n})\n\nexport function Gallery<NameT, StateT>({\n    images,\n    widths,\n    ratios,\n    percentVw = 100,\n    margin = '2px',\n    initState,\n    imgLoader,\n    overlay,\n}: GalleryProps<NameT, StateT>) {\n\n    const [state, setState] = useState<StateT[]>(new Array(images.length).fill(initState))\n\n    const sizes = useMemo(() => ratios.map(ratio => {\n        let current_ratio = 0\n        let width_percent: number[] = []\n        for(let i = 0; i < images.length; i++) {\n            if(current_ratio + images[i].aspect_ratio <= ratio) {\n                current_ratio += images[i].aspect_ratio\n            } else {\n                for(let j = width_percent.length; j < i; j++) {\n                    width_percent.push(Math.floor(images[j].aspect_ratio / current_ratio * 1000) / 10)\n                }\n                current_ratio=images[i].aspect_ratio\n            }\n        }\n        for(let i = width_percent.length; i < images.length; i++) {\n            width_percent.push(Math.floor(images[i].aspect_ratio / current_ratio * 1000) / 10)\n        }\n        return width_percent\n    }), [images, ratios])\n\n    const width = useWindowWidth()\n\n    const sizeLevel = useMemo(() => {\n        if(width === null) return null\n        const index = widths.findIndex(value => value > width)\n        return index === -1 ? ratios.length - 1 : index\n    }, [width, widths, ratios])\n\n    if (width == null || sizeLevel === null) return null\n\n    return (\n        <div style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n        }}>\n            {images.map((image, index) => (\n                <div key={index} style={{\n                    boxSizing: 'border-box',\n                    width: sizes[index]+'%',\n                    flexShrink: 0,\n                    flexGrow: 1,\n                    aspectRatio: image.aspect_ratio,\n                    position: 'relative',\n                    paddingBottom: sizes[sizeLevel][index]/image.aspect_ratio+'%',\n                }}>\n                    <div style={{\n                        position: 'absolute',\n                        top: margin,\n                        left: margin,\n                        right: margin,\n                        bottom: margin,\n                    }}>\n                        <Image src={image.src} alt={image.alt??''} fill loader={imgLoader} sizes={widths.map((width, i) => `(max-width: ${width}px) ${percentVw/100*sizes[i][index]}vw`).join(', ')+`, ${percentVw/100*sizes[sizes.length-1][index]}vw`} />\n                        {overlay ? (\n                            <div style={{\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                            }}>\n                                {overlay((image as NamedImage<NameT>).name, state[index], arg => {\n                                    if(arg instanceof Function) setState(state.map((value, i) => i === index ? arg(value) : value))\n                                    else setState(state.map((value, i) => i === index ? arg : value))\n                                })}\n                            </div>\n                        ) : null}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}"],"names":["useWindowWidth","width","setWidth","useState","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","Gallery","images","widths","ratios","percentVw","margin","initState","imgLoader","overlay","state","setState","Array","length","fill","sizes","useMemo","map","ratio","current_ratio","width_percent","i","aspect_ratio","j","push","Math","floor","sizeLevel","index","findIndex","value","_jsx","display","flexWrap","image","boxSizing","flexShrink","flexGrow","aspectRatio","position","paddingBottom","_jsxs","top","left","right","bottom","src","alt","join","name","arg","Function"],"mappings":"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"}
{"version":3,"file":"index.js","sources":["../src/useWindowWidth.tsx","../src/Gallery.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function useWindowWidth() {\n    const [width, setWidth] = useState<null|number>(null)\n\n    useEffect(() => {\n        const handleResize = () => setWidth(window.innerWidth)\n        window.addEventListener('resize', handleResize)\n        handleResize()\n        return () => window.removeEventListener('resize', handleResize)\n    }, [])\n\n    return width\n}","import React, { useState, useMemo, Dispatch, SetStateAction, ReactElement } from 'react'\nimport Image, { ImageLoader } from 'next/image'\nimport useWindowWidth from './useWindowWidth'\n\nexport interface Image {\n    src: string\n    aspect_ratio: number\n    alt?: string\n}\n\nexport interface NamedImage<NameT> extends Image {\n    name: NameT\n}\n\nexport type GalleryProps<NameT, StateT> = {\n    widths: number[]\n    ratios: number[]\n    percentVw?: number\n    margin?: string\n    initState?: StateT\n    imgLoader?: ImageLoader\n    spanLastRow?: number\n} & (\n    | {\n          images: NamedImage<NameT>[]\n          overlay: (name: NameT, state: StateT, setState: Dispatch<SetStateAction<StateT>>) => ReactElement\n      }\n    | {\n          images: Image[]\n          overlay?: undefined\n      }\n)\n\nexport function Gallery<NameT, StateT>({\n    images,\n    widths,\n    ratios,\n    percentVw = 100,\n    margin = '2px',\n    initState,\n    imgLoader,\n    overlay,\n    spanLastRow = 0,\n}: GalleryProps<NameT, StateT>) {\n    const [state, setState] = useState<StateT[]>(new Array(images.length).fill(initState))\n\n    const [sizes, width_left] = useMemo(() => {\n        const sizes: number[][] = []\n        const wl: number[] = []\n        for (const ratio of ratios) {\n            let current_ratio = 0\n            let width_percent: number[] = []\n            for (let i = 0; i < images.length; i++) {\n                if (current_ratio + images[i].aspect_ratio <= ratio) {\n                    current_ratio += images[i].aspect_ratio\n                } else {\n                    for (let j = width_percent.length; j < i; j++) {\n                        width_percent.push(Math.floor((images[j].aspect_ratio / current_ratio) * 1000) / 10)\n                    }\n                    current_ratio = images[i].aspect_ratio\n                }\n            }\n            const width_left = Math.floor((1 - current_ratio / ratio) * 1000) / 10\n            const shouldSpan = 100 - width_left < spanLastRow\n            for (let i = width_percent.length; i < images.length; i++) {\n                width_percent.push(\n                    Math.floor((images[i].aspect_ratio / (shouldSpan ? ratio : current_ratio)) * 1000) / 10\n                )\n            }\n            sizes.push(width_percent)\n            wl.push(shouldSpan ? width_left : 0)\n        }\n        return [sizes, wl]\n    }, [images, ratios, spanLastRow])\n\n    const width = useWindowWidth()\n\n    const sizeLevel = useMemo(() => {\n        if (width === null) return null\n        const index = widths.findIndex((value) => value > width)\n        return index === -1 ? ratios.length - 1 : index\n    }, [width, widths, ratios])\n\n    if (width == null || sizeLevel === null) return null\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n            }}\n        >\n            {images.map((image, index) => (\n                <div\n                    key={index}\n                    style={{\n                        boxSizing: 'border-box',\n                        width: sizes[sizeLevel][index] + '%',\n                        flexShrink: 0,\n                        flexGrow: 1,\n                        position: 'relative',\n                        paddingBottom: sizes[sizeLevel][index] / image.aspect_ratio + '%',\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: margin,\n                            left: margin,\n                            right: margin,\n                            bottom: margin,\n                        }}\n                    >\n                        <Image\n                            src={image.src}\n                            alt={image.alt ?? ''}\n                            fill\n                            loader={imgLoader}\n                            sizes={\n                                widths\n                                    .map(\n                                        (width, i) => `(max-width: ${width}px) ${(percentVw / 100) * sizes[i][index]}vw`\n                                    )\n                                    .join(', ') + `, ${(percentVw / 100) * sizes[sizes.length - 1][index]}vw`\n                            }\n                        />\n                        {overlay ? (\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    top: 0,\n                                    left: 0,\n                                    right: 0,\n                                    bottom: 0,\n                                }}\n                            >\n                                {overlay((image as NamedImage<NameT>).name, state[index], (arg) => {\n                                    if (arg instanceof Function)\n                                        setState(state.map((value, i) => (i === index ? arg(value) : value)))\n                                    else setState(state.map((value, i) => (i === index ? arg : value)))\n                                })}\n                            </div>\n                        ) : null}\n                    </div>\n                </div>\n            ))}\n            <div\n                style={{\n                    width: width_left[sizeLevel] + '%',\n                    flexShrink: 0,\n                    flexGrow: 1,\n                }}\n            ></div>\n        </div>\n    )\n}\n"],"names":["useWindowWidth","width","setWidth","useState","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","Gallery","images","widths","ratios","percentVw","margin","initState","imgLoader","overlay","spanLastRow","state","setState","Array","length","fill","sizes","width_left","useMemo","wl","ratio","current_ratio","width_percent","i","aspect_ratio","j","push","Math","floor","shouldSpan","sizeLevel","index","findIndex","value","_jsxs","display","flexWrap","map","image","_jsx","boxSizing","flexShrink","flexGrow","position","paddingBottom","top","left","right","bottom","src","alt","join","name","arg","Function"],"mappings":"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"}
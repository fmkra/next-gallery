{"version":3,"file":"index.esm.js","sources":["../src/useWindowWidth.tsx","../src/Gallery.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function useWindowWidth() {\n    const [width, setWidth] = useState<null|number>(null)\n\n    useEffect(() => {\n        const handleResize = () => setWidth(window.innerWidth)\n        window.addEventListener('resize', handleResize)\n        handleResize()\n        return () => window.removeEventListener('resize', handleResize)\n    }, [])\n\n    return width\n}","import React, { useState, useMemo, Dispatch, SetStateAction, ReactElement } from 'react'\nimport Image, { ImageLoader } from 'next/image'\nimport useWindowWidth from './useWindowWidth'\n\n\nexport interface Image {\n    src: string\n    aspect_ratio: number\n    alt?: string\n}\n\nexport interface NamedImage<NameT> extends Image {\n    name: NameT\n}\n\nexport type GalleryProps<NameT, StateT> = {\n    widths: number[]\n    ratios: number[]\n    percentVw?: number\n    margin?: string\n    initState?: StateT\n    imgLoader?: ImageLoader,\n} & ({\n    images: NamedImage<NameT>[]\n    overlay: (name: NameT, state: StateT, setState: Dispatch<SetStateAction<StateT>>) => ReactElement\n}|{\n    images: Image[]\n    overlay?: undefined\n})\n\nexport function Gallery<NameT, StateT>({\n    images,\n    widths,\n    ratios,\n    percentVw = 100,\n    margin = '2px',\n    initState,\n    imgLoader,\n    overlay,\n}: GalleryProps<NameT, StateT>) {\n\n    const [state, setState] = useState<StateT[]>(new Array(images.length).fill(initState))\n\n    const sizes = useMemo(() => ratios.map(ratio => {\n        let current_ratio = 0\n        let width_percent: number[] = []\n        for(let i = 0; i < images.length; i++) {\n            if(current_ratio + images[i].aspect_ratio <= ratio) {\n                current_ratio += images[i].aspect_ratio\n            } else {\n                for(let j = width_percent.length; j < i; j++) {\n                    width_percent.push(Math.floor(images[j].aspect_ratio / current_ratio * 1000) / 10)\n                }\n                current_ratio=images[i].aspect_ratio\n            }\n        }\n        for(let i = width_percent.length; i < images.length; i++) {\n            width_percent.push(Math.floor(images[i].aspect_ratio / current_ratio * 1000) / 10)\n        }\n        return width_percent\n    }), [images, ratios])\n\n    const width = useWindowWidth()\n\n    const sizeLevel = useMemo(() => {\n        if(width === null) return null\n        const index = widths.findIndex(value => value > width)\n        return index === -1 ? ratios.length - 1 : index\n    }, [width, widths, ratios])\n\n    if (width == null || sizeLevel === null) return null\n\n    return (\n        <div style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n        }}>\n            {images.map((image, index) => (\n                <div key={index} style={{\n                    boxSizing: 'border-box',\n                    width: sizes[index]+'%',\n                    flexShrink: 0,\n                    flexGrow: 1,\n                    aspectRatio: image.aspect_ratio,\n                    position: 'relative',\n                    paddingBottom: sizes[sizeLevel][index]/image.aspect_ratio+'%',\n                }}>\n                    <div style={{\n                        position: 'absolute',\n                        top: margin,\n                        left: margin,\n                        right: margin,\n                        bottom: margin,\n                    }}>\n                        <Image src={image.src} alt={image.alt??''} fill loader={imgLoader} sizes={widths.map((width, i) => `(max-width: ${width}px) ${percentVw/100*sizes[i][index]}vw`).join(', ')+`, ${percentVw/100*sizes[sizes.length-1][index]}vw`} />\n                        {overlay ? (\n                            <div style={{\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                            }}>\n                                {overlay((image as NamedImage<NameT>).name, state[index], arg => {\n                                    if(arg instanceof Function) setState(state.map((value, i) => i === index ? arg(value) : value))\n                                    else setState(state.map((value, i) => i === index ? arg : value))\n                                })}\n                            </div>\n                        ) : null}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}"],"names":["useWindowWidth","useState","width","setWidth","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","Gallery","images","widths","ratios","percentVw","margin","initState","imgLoader","overlay","Array","length","fill","state","setState","sizes","useMemo","map","ratio","current_ratio","width_percent","i","aspect_ratio","j","push","Math","floor","sizeLevel","index","findIndex","value","_jsx","display","flexWrap","image","boxSizing","flexShrink","flexGrow","aspectRatio","position","paddingBottom","_jsxs","top","left","right","bottom","src","alt","join","name","arg","Function"],"mappings":"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"}
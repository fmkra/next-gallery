"use strict";function t(t){return Math.floor(1e4*t)/100}exports.calculateImageSizes=e=>{var s,o,l,i;const n=Array.from({length:e.images.length},(()=>[])),a=[];for(const r of e.ratios){let h=0,c=[],f=0;for(let s=0;s<e.images.length;s++)if(h+e.images[s].aspect_ratio<=r)h+=e.images[s].aspect_ratio;else{f=c.length;for(let o=c.length;o<s;o++){const s=t(e.images[o].aspect_ratio/h);c.push(s)}h=e.images[s].aspect_ratio}const g=c.slice(f);for(let t=1;t<g.length;t++)g[t]+=g[t-1];g.push(100);let u=0;const p=c.length;let m=0;const v=[];for(let s=c.length;s<e.images.length;s++){const o=t(e.images[s].aspect_ratio/r);for(c.push(o),m+=o;g[u]<m;)u++;v.push(g[u]/m),u>0&&v.push(g[u-1]/m)}if("fill"==e.lastRowBehavior){const t=r/h;if(1>=t*(null!==(s=e.threshold)&&void 0!==s?s:0))for(let e=p;e<c.length;e++)c[e]*=t}else if("match-previous"==e.lastRowBehavior){const t=null!==(o=e.growLimit)&&void 0!==o?o:1.5,s=null!==(l=e.shrinkLimit)&&void 0!==l?l:.5,n=null!==(i=e.preferGrowing)&&void 0!==i?i:2;v.push(100/m);let a=1,r=1/0;for(const e of v)if(e>=1){const s=e;if(e>t)continue;Math.abs(s)<Math.abs(r)&&(a=e,r=s)}else{const t=n/e;if(e<s)continue;Math.abs(t)<Math.abs(r)&&(a=e,r=t)}for(let t=p;t<c.length;t++)c[t]*=a}let d=100;for(let t=p;t<c.length;t++)d-=c[t];for(const t in c)n[t].push(c[t]);a.push(d)}return[n,a]};
//# sourceMappingURL=calculateImageSizes.js.map
